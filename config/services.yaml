# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder

imports:
    - { resource: '@AntAdminBundle/Resources/config/admin.yml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller'
#        tags: ['controller.service_arguments']
#
#    # add more service definitions when explicit configuration is needed
#    # please note that last definitions always *replace* previous ones

    sonata.admin.block.admin_head:
        class: Ant\AdminBundle\Block\AdminHeadBlockService
        arguments: ["sonata.admin.block.admin_head", '@templating', '@sonata.admin.pool']
        tags:
            - { name: sonata.block}
    form.type.tinymce:
        class: Ant\AdminBundle\Form\TinymceType
        tags:
            - { name: form.type, alias: tinymce }

    security.acl.permission.map:
        class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap

    app.menu_builder:
        class: App\Menu\FrontendBuilder

    app.menu.main_menu:
        class: Knp\Menu\MenuItem
        factory: ['@app.menu_builder', 'mainMenu']
        tags:
            - { name: knp_menu.menu, alias: mainMenu }


fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Ant\UserBundle\Entity\User
    from_email:
        address: '%env(resolve:USER_ADDRESS)%'
        sender_name: '%env(resolve:SENDER_NAME)%'

sonata_media:
    # if you don't use default namespace configuration
    class:
        media: Ant\MediaBundle\Entity\Media
        gallery: Ant\MediaBundle\Entity\Gallery
        gallery_has_media: Ant\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:
            providers:
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 200 , quality: 100}
                big:   { width: 1500 , quality: 100}
                hero_extra: {width: 1920, quality: 90}
#                hero_square: {height: 900, quality: 90}
                house_thumb_small: {width: 200, quality: 90}
                house_thumb_big: {width: 500, height: 550, quality: 90}
                house_gallery_plan: {width: 1545, quality: 90}
                house_gallery: {width: 700, height: 800, quality: 90}
                services_thumb: {width: 350, height: 170, quality: 80}
                technology_thumb: {width: 475, height: 500, quality: 80}
    cdn:
        server:
            path:  '/uploads/media'

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../public/uploads/media"
            create:     false
    providers:
        image:
            thumbnail:  sonata.media.thumbnail.liip_imagine
            allowed_extensions: ['jpg', 'png', 'jpeg']
            allowed_mime_types: ['image/pjpeg', 'image/jpeg','image/jpg', 'image/png', 'image/x-png']

gregwar_captcha: ~

knp_menu:
    twig:  # use "twig: false" to disable the Twig extension and the TwigRenderer
        template: top_menu.html.twig
    templating: false # if true, enables the helper for PHP templates
    default_renderer: twig # The renderer to use, list is also available by default



knp_paginator:
    page_range: 10                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements
    template:
        pagination: AntWebBundle::paginator_sliding.html.twig     # sliding pagination controls template
        sortable: KnpPaginatorBundle:Pagination:sortable_link.html.twig # sort link template
