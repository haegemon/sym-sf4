# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

imports:
    - { resource: '@AntAdminBundle/Resources/config/admin.yml' }

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
#    App\Controller\:
#        resource: '../src/Controller'
#        tags: ['controller.service_arguments']
#
#    # add more service definitions when explicit configuration is needed
#    # please note that last definitions always *replace* previous ones

fos_user:
    db_driver: orm
    firewall_name: main
    user_class: Ant\UserBundle\Entity\User
    from_email:
        address: '%env(resolve:USER_ADDRESS)%'
        sender_name: '%env(resolve:SENDER_NAME)%'

sonata_media:
    # if you don't use default namespace configuration
    class:
        media: Ant\MediaBundle\Entity\Media
        gallery: Ant\MediaBundle\Entity\Gallery
        gallery_has_media: Ant\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 200 , quality: 100}
                big:   { width: 1500 , quality: 100}
    cdn:
        server:
            path:  '/uploads/media'

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../public/uploads/media"
            create:     false
    providers:
        image:
            thumbnail:  sonata.media.thumbnail.liip_imagine
        vimeo:
            thumbnail:  sonata.media.thumbnail.liip_imagine
        youtube:
            thumbnail:  sonata.media.thumbnail.liip_imagine
        dailymotion:
            thumbnail:  sonata.media.thumbnail.liip_imagine

liip_imagine:
    filter_sets:
        default_small:
            quality: 100
#            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [100, 70], mode: outbound }
        default_big:
            quality: 75
#            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [500, 300], mode: outbound }
        default_gallery:
            quality: 75
#            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [500, 300], mode: outbound }
        admin:
            quality: 75
#            controller_action: 'SonataMediaBundle:Media:liipImagineFilter'
            filters:
                thumbnail: { size: [500, 300], mode: outbound }

gregwar_captcha: ~